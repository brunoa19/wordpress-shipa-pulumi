import * as pulumi from "@pulumi/pulumi";
export declare class VolumeBind extends pulumi.CustomResource {
    /**
     * Get an existing VolumeBind resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VolumeBindState, opts?: pulumi.CustomResourceOptions): VolumeBind;
    /**
     * Returns true if the given object is an instance of VolumeBind.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VolumeBind;
    readonly app: pulumi.Output<string>;
    readonly mountPoint: pulumi.Output<string>;
    readonly noRestart: pulumi.Output<boolean | undefined>;
    readonly volume: pulumi.Output<string>;
    /**
     * Create a VolumeBind resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VolumeBindArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering VolumeBind resources.
 */
export interface VolumeBindState {
    app?: pulumi.Input<string>;
    mountPoint?: pulumi.Input<string>;
    noRestart?: pulumi.Input<boolean>;
    volume?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a VolumeBind resource.
 */
export interface VolumeBindArgs {
    app: pulumi.Input<string>;
    mountPoint: pulumi.Input<string>;
    noRestart?: pulumi.Input<boolean>;
    volume: pulumi.Input<string>;
}
